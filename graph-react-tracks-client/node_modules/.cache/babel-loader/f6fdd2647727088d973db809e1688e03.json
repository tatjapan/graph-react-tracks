{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/tatsuya-tsuri/Desktop/Code/graph-react-tracks/graph-react-tracks-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/tatsuya-tsuri/Desktop/Code/graph-react-tracks/graph-react-tracks-client/src/components/Track/DeleteTrack.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($trackId: Int!) {\\n    deleteTrack(trackId: $trackId) {\\n      trackId\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from \"react\";\nimport { Mutation } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TrashIcon from \"@material-ui/icons/DeleteForeverOutlined\";\nimport { UserContext } from '../../Root';\nimport { GET_TRACKS_QUERY } from '../../pages/App';\n\nvar DeleteTrack = function DeleteTrack(_ref) {\n  var track = _ref.track;\n  var currentUser = useContext(UserContext);\n  var isCurrentUser = currentUser.id === track.postedBy.id;\n  return isCurrentUser && React.createElement(Mutation, {\n    mutation: DELETE_TRACK_MUTATION,\n    variables: {\n      trackId: track.id\n    },\n    onCompleted: function onCompleted(data) {\n      console.log({\n        data: data\n      });\n    },\n    update: handleUpdateCache\n    /* refetchQueries={() => [{ query: GET_TRACKS_QUERY }]} */\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, function (deleteTrack) {\n    return React.createElement(IconButton, {\n      onClick: deleteTrack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(TrashIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  });\n};\n\nvar DELETE_TRACK_MUTATION = gql(_templateObject());\nexport default DeleteTrack;","map":{"version":3,"sources":["/Users/tatsuya-tsuri/Desktop/Code/graph-react-tracks/graph-react-tracks-client/src/components/Track/DeleteTrack.js"],"names":["React","useContext","Mutation","gql","IconButton","TrashIcon","UserContext","GET_TRACKS_QUERY","DeleteTrack","track","currentUser","isCurrentUser","id","postedBy","DELETE_TRACK_MUTATION","trackId","data","console","log","handleUpdateCache","deleteTrack"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0CAAtB;AAEA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,gBAAT,QAAiC,iBAAjC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACjC,MAAMC,WAAW,GAAGT,UAAU,CAACK,WAAD,CAA9B;AACA,MAAMK,aAAa,GAAGD,WAAW,CAACE,EAAZ,KAAmBH,KAAK,CAACI,QAAN,CAAeD,EAAxD;AAEA,SAAOD,aAAa,IAClB,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAEG,qBADZ;AAEE,IAAA,SAAS,EAAE;AAAEC,MAAAA,OAAO,EAAEN,KAAK,CAACG;AAAjB,KAFb;AAGE,IAAA,WAAW,EAAE,qBAAAI,IAAI,EAAI;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,QAAAA,IAAI,EAAJA;AAAF,OAAZ;AACD,KALH;AAME,IAAA,MAAM,EAAEG;AACR;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASG,UAAAC,WAAW;AAAA,WACV,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADU;AAAA,GATd,CADF;AAiBD,CArBD;;AAuBA,IAAMN,qBAAqB,GAAGX,GAAH,mBAA3B;AAQA,eAAeK,WAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Mutation } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TrashIcon from \"@material-ui/icons/DeleteForeverOutlined\";\n\nimport { UserContext } from '../../Root';\nimport { GET_TRACKS_QUERY } from '../../pages/App';\n\nconst DeleteTrack = ({ track }) => {\n  const currentUser = useContext(UserContext)\n  const isCurrentUser = currentUser.id === track.postedBy.id\n\n  return isCurrentUser && (\n    <Mutation \n      mutation={DELETE_TRACK_MUTATION}\n      variables={{ trackId: track.id }}\n      onCompleted={data => {\n        console.log({ data });\n      }}\n      update={handleUpdateCache}\n      /* refetchQueries={() => [{ query: GET_TRACKS_QUERY }]} */\n    >\n      {deleteTrack => (\n        <IconButton onClick={deleteTrack}>\n          <TrashIcon />\n        </IconButton>\n      )}\n    </Mutation>\n  );\n};\n\nconst DELETE_TRACK_MUTATION = gql`\n  mutation($trackId: Int!) {\n    deleteTrack(trackId: $trackId) {\n      trackId\n    }\n  }\n`;\n\nexport default DeleteTrack;\n"]},"metadata":{},"sourceType":"module"}