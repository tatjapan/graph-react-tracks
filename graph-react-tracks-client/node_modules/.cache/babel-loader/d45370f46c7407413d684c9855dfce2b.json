{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tatsuya-tsuri/Desktop/Code/graph-react-tracks/graph-react-tracks-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tatsuya-tsuri/Desktop/Code/graph-react-tracks/graph-react-tracks-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/tatsuya-tsuri/Desktop/Code/graph-react-tracks/graph-react-tracks-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tatsuya-tsuri/Desktop/Code/graph-react-tracks/graph-react-tracks-client/src/components/Track/UpdateTrack.js\";\nimport React, { useState } from \"react\";\nimport { Mutation } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport axios from 'axios';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\nimport { GET_TRACKS_QUERY } from '../../pages/App';\nimport Error from '../Shared/Error';\n\nvar UpdateTrack = function UpdateTrack(_ref) {\n  var classes = _ref.classes,\n      track = _ref.track;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(track.title),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState(track.hashtag),\n      _useState6 = _slicedToArray(_useState5, 2),\n      hashtag = _useState6[0],\n      setHashtag = _useState6[1];\n\n  var _useState7 = useState(track.description),\n      _useState8 = _slicedToArray(_useState7, 2),\n      description = _useState8[0],\n      setDescription = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      file = _useState10[0],\n      setFile = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      submitting = _useState12[0],\n      setSubmitting = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      fileError = _useState14[0],\n      setFileError = _useState14[1];\n\n  var handleAudioChange = function handleAudioChange(event) {\n    var selectedFile = event.target.files[0];\n    var fileSizeLimit = 15000000;\n\n    if (selectedFile && selectedFile.size > fileSizeLimit) {\n      setFileError(\"\".concat(selectedFile.name, \": \\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\\u3067\\u304D\\u308B\\u30D5\\u30A1\\u30A4\\u30EB\\u30B5\\u30A4\\u30BA\\u306F15MB\\u304C\\u4E0A\\u9650\\u3067\\u3059\\u3002\"));\n    } else {\n      setFile(selectedFile);\n      setFileError('');\n    }\n  };\n\n  var handleAudioUpload =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var data, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              data = new FormData();\n              data.append('file', file);\n              data.append('resource_type', 'raw');\n              data.append('upload_preset', 'trackgram');\n              data.append('cloud_name', 'tatjapan');\n              _context.next = 8;\n              return axios.post(\"https://api.cloudinary.com/v1_1/tatjapan/raw/upload\", data);\n\n            case 8:\n              res = _context.sent;\n              return _context.abrupt(\"return\", res.data.url);\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('ファイルアップロード中にエラーが発生しました。', _context.t0);\n              setSubmitting(false);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n\n    return function handleAudioUpload() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(event, updateTrack) {\n      var uploadedUrl;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              event.preventDefault();\n              setSubmitting(true); // ファイルをアップロードしてCloudinaryのAPIからURL取得\n\n              _context2.next = 4;\n              return handleAudioUpload();\n\n            case 4:\n              uploadedUrl = _context2.sent;\n              updateTrack({\n                variables: {\n                  title: title,\n                  hashtag: hashtag,\n                  description: description,\n                  url: uploadedUrl\n                }\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleSubmit(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    onClick: function onClick() {\n      return setOpen(true);\n    },\n    variant: \"fab\",\n    className: classes.fab,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, open ? React.createElement(ClearIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }) : React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(Mutation, {\n    mutation: CREATE_TRACK_MUTATION,\n    onCompleted: function onCompleted(data) {\n      console.log({\n        data: data\n      });\n      setSubmitting(false);\n      setOpen(false);\n      setTitle(\"\");\n      setDescription(\"\");\n      setHashtag(\"\");\n      setFile(\"\");\n    },\n    refetchQueries: function refetchQueries() {\n      return [{\n        query: GET_TRACKS_QUERY\n      }];\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, function (createTrack, _ref4) {\n    var loading = _ref4.loading,\n        error = _ref4.error;\n    if (error) return React.createElement(Error, {\n      error: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    });\n    return React.createElement(Dialog, {\n      open: open,\n      className: classes.dialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: function onSubmit(event) {\n        return handleSubmit(event, createTrack);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Create Track\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"\\u97F3\\u697D\\u30D5\\u30A1\\u30A4\\u30EB\\u306B\\u30BF\\u30A4\\u30C8\\u30EB\\u3068\\u8AAC\\u660E\\u3001\\u30CF\\u30C3\\u30B7\\u30E5\\u30BF\\u30B0\\u3092\\u8FFD\\u52A0\"), React.createElement(FormControl, {\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"\\u30BF\\u30A4\\u30C8\\u30EB\",\n      placeholder: \"\\u30BF\\u30A4\\u30C8\\u30EB\\u3092\\u8FFD\\u52A0\",\n      onChange: function onChange(event) {\n        return setTitle(event.target.value);\n      },\n      value: title,\n      className: classes.textField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      multiline: true,\n      rows: \"3\",\n      label: \"\\u8AAC\\u660E\",\n      placeholder: \"\\u8AAC\\u660E\\u3092\\u8FFD\\u52A0\",\n      onChange: function onChange(event) {\n        return setDescription(event.target.value);\n      },\n      value: description,\n      className: classes.textField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      multiline: true,\n      rows: \"3\",\n      label: \"\\u30CF\\u30C3\\u30B7\\u30E5\\u30BF\\u30B0\",\n      placeholder: \"\\u30CF\\u30C3\\u30B7\\u30E5\\u30BF\\u30B0\\u3092\\u8FFD\\u52A0\\uFF08e.g. #music\\uFF09\",\n      onChange: function onChange(event) {\n        return setHashtag(event.target.value);\n      },\n      value: hashtag,\n      className: classes.textField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      error: Boolean(fileError),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"audio\",\n      required: true,\n      type: \"file\",\n      accept: \"audio\",\n      className: classes.input,\n      onChange: handleAudioChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"audio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      color: file ? \"secondary\" : \"inherit\",\n      component: \"span\",\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"\\u97F3\\u697D\\u30D5\\u30A1\\u30A4\\u30EB(\\u6700\\u592715MB\\u307E\\u3067)\", React.createElement(LibraryMusicIcon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), file && file.name, React.createElement(FormHelperText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, fileError)))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Button, {\n      disabled: submitting,\n      onClick: function onClick() {\n        return setOpen(false);\n      },\n      className: classes.cancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"), React.createElement(Button, {\n      disabled: submitting || !title.trim() || !description.trim() || !file,\n      type: \"submit\",\n      className: classes.save,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, submitting ? React.createElement(CircularProgress, {\n      className: classes.save,\n      size: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }) : \"トラックを追加\"))));\n  }));\n};\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    dialog: {\n      margin: \"0 auto\",\n      maxWidth: 550\n    },\n    textField: {\n      margin: theme.spacing.unit\n    },\n    cancel: {\n      color: \"red\"\n    },\n    save: {\n      color: \"green\"\n    },\n    button: {\n      margin: theme.spacing.unit * 2\n    },\n    icon: {\n      marginLeft: theme.spacing.unit\n    },\n    input: {\n      display: \"none\"\n    }\n  };\n};\n\nexport default withStyles(styles)(UpdateTrack);","map":{"version":3,"sources":["/Users/tatsuya-tsuri/Desktop/Code/graph-react-tracks/graph-react-tracks-client/src/components/Track/UpdateTrack.js"],"names":["React","useState","Mutation","gql","axios","withStyles","IconButton","EditIcon","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","FormControl","FormHelperText","DialogTitle","CircularProgress","LibraryMusicIcon","GET_TRACKS_QUERY","Error","UpdateTrack","classes","track","open","setOpen","title","setTitle","hashtag","setHashtag","description","setDescription","file","setFile","submitting","setSubmitting","fileError","setFileError","handleAudioChange","event","selectedFile","target","files","fileSizeLimit","size","name","handleAudioUpload","data","FormData","append","post","res","url","console","error","handleSubmit","updateTrack","preventDefault","uploadedUrl","variables","fab","CREATE_TRACK_MUTATION","log","query","createTrack","loading","dialog","value","textField","Boolean","input","button","icon","cancel","trim","save","styles","theme","container","display","flexWrap","margin","maxWidth","spacing","unit","color","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Mutation } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport axios from 'axios';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\n\nimport { GET_TRACKS_QUERY } from '../../pages/App';\nimport Error from '../Shared/Error';\n\nconst UpdateTrack = ({ classes, track }) => {\n  const [open, setOpen] = useState(false);\n  const [title, setTitle] = useState(track.title);\n  const [hashtag, setHashtag] = useState(track.hashtag);\n  const [description, setDescription] = useState(track.description);\n  const [file, setFile] = useState(\"\");\n  const [submitting, setSubmitting] = useState(false);\n  const [fileError, setFileError] = useState(\"\");\n\n  const handleAudioChange = event => {\n    const selectedFile = event.target.files[0]\n    const fileSizeLimit = 15000000;\n    if (selectedFile && selectedFile.size > fileSizeLimit) {\n      setFileError(`${selectedFile.name}: アップロードできるファイルサイズは15MBが上限です。`)\n    } else {\n      setFile(selectedFile);\n      setFileError('');\n    }\n  }\n\n  const handleAudioUpload = async () => {\n    try {\n      const data = new FormData();\n      data.append('file', file);\n      data.append('resource_type', 'raw');\n      data.append('upload_preset', 'trackgram');\n      data.append('cloud_name', 'tatjapan');\n      const res = await axios.post(\"https://api.cloudinary.com/v1_1/tatjapan/raw/upload\", data);\n      return res.data.url;\n    } catch (err) {\n      console.error('ファイルアップロード中にエラーが発生しました。', err);\n      setSubmitting(false);\n    }\n\n  };\n\n  const handleSubmit = async (event, updateTrack) => {\n    event.preventDefault();\n    setSubmitting(true);\n    // ファイルをアップロードしてCloudinaryのAPIからURL取得\n    const uploadedUrl = await handleAudioUpload();\n    updateTrack({ variables: { title, hashtag, description, url: uploadedUrl } });\n  };\n\n  return (\n    <>\n      {/* create track button */}\n      <Button onClick={() => setOpen(true)} variant=\"fab\" className={classes.fab} color=\"secondary\">\n        {open ? <ClearIcon /> : <AddIcon />}\n      </Button>\n\n      {/* create track DIALOG */}\n      <Mutation\n        mutation={CREATE_TRACK_MUTATION}\n        onCompleted={data => {\n          console.log({ data })\n          setSubmitting(false)\n          setOpen(false)\n          setTitle(\"\")\n          setDescription(\"\")\n          setHashtag(\"\")\n          setFile(\"\")\n        }}\n        refetchQueries={() => [{ query: GET_TRACKS_QUERY }]}\n      >\n        {(createTrack, { loading, error }) => {\n          if (error) return <Error error={error} />;\n\n          return (\n            <Dialog open={open} className={classes.dialog}>\n              <form onSubmit={event => handleSubmit(event, createTrack)}>\n                <DialogTitle>Create Track</DialogTitle>\n                <DialogContent>\n                  <DialogContentText>\n                    音楽ファイルにタイトルと説明、ハッシュタグを追加\n                  </DialogContentText>\n                  <FormControl fullWidth>\n                    <TextField\n                      label=\"タイトル\"\n                      placeholder=\"タイトルを追加\"\n                      onChange={event => setTitle(event.target.value)}\n                      value={title}\n                      className={classes.textField}\n                    />\n                  </FormControl>\n\n                  <FormControl fullWidth>\n                    <TextField\n                      multiline\n                      rows=\"3\"\n                      label=\"説明\"\n                      placeholder=\"説明を追加\"\n                      onChange={event => setDescription(event.target.value)}\n                      value={description}\n                      className={classes.textField}\n                    />\n                  </FormControl>\n\n                  <FormControl fullWidth>\n                    <TextField\n                      multiline\n                      rows=\"3\"\n                      label=\"ハッシュタグ\"\n                      placeholder=\"ハッシュタグを追加（e.g. #music）\"\n                      onChange={event => setHashtag(event.target.value)}\n                      value={hashtag}\n                      className={classes.textField}\n                    />\n                  </FormControl>\n\n                  <FormControl error={Boolean(fileError)}>\n                    <input\n                      id=\"audio\"\n                      required\n                      type=\"file\"\n                      accept=\"audio\"\n                      className={classes.input}\n                      onChange={handleAudioChange}\n                    />\n                    <label htmlFor=\"audio\">\n                      <Button variant=\"outlined\" color={file ? \"secondary\" : \"inherit\"}\n                        component=\"span\" className={classes.button}\n                      >\n                        音楽ファイル(最大15MBまで)\n                        <LibraryMusicIcon className={classes.icon} />\n                      </Button>\n                      {file && file.name}\n                      <FormHelperText>{fileError}</FormHelperText>\n                    </label>\n                  </FormControl>\n                </DialogContent>\n                <DialogActions>\n                  <Button\n                    disabled={submitting}\n                    onClick={() => setOpen(false)}\n                    className={classes.cancel}\n                  >\n                    キャンセル\n                  </Button>\n                  <Button\n                    disabled={\n                      submitting || !title.trim() || !description.trim() || !file\n                    }\n                    type=\"submit\"\n                    className={classes.save}\n                  >\n                    {submitting ? (\n                      <CircularProgress className={classes.save} size={24} />\n                    ) : (\"トラックを追加\")}\n                  </Button>\n                </DialogActions>\n              </form>\n            </Dialog>\n          )\n        }}\n      </Mutation>\n\n    </>\n  );\n};\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  dialog: {\n    margin: \"0 auto\",\n    maxWidth: 550\n  },\n  textField: {\n    margin: theme.spacing.unit\n  },\n  cancel: {\n    color: \"red\"\n  },\n  save: {\n    color: \"green\"\n  },\n  button: {\n    margin: theme.spacing.unit * 2\n  },\n  icon: {\n    marginLeft: theme.spacing.unit\n  },\n  input: {\n    display: \"none\"\n  }\n});\n\nexport default withStyles(styles)(UpdateTrack);\n"]},"metadata":{},"sourceType":"module"}