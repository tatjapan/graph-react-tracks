{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/tatsuya-tsuri/Desktop/Code/graph-react-tracks/graph-react-tracks-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/tatsuya-tsuri/Desktop/Code/graph-react-tracks/graph-react-tracks-client/src/Root.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    me {\\n      id\\n      username\\n      email\\n      likeSet {\\n        track {\\n          id\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport withRoot from \"./withRoot\";\nimport App from './pages/App';\nimport Profile from './pages/Profile';\nimport Header from './components/Shared/Header';\nimport Loading from './components/Shared/Loading';\nimport Error from './components/Shared/Error';\nexport var UserContext = React.createContext();\n\nvar Root = function Root() {\n  return React.createElement(Query, {\n    query: ME_QUERY,\n    fetchPolicy: \"cache-and-network\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, function (_ref) {\n    var data = _ref.data,\n        loading = _ref.loading,\n        error = _ref.error;\n    if (loading) return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n    if (error) return React.createElement(Error, {\n      error: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n    var currentUser = data.me;\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(UserContext.Provider, {\n      value: currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Header, {\n      currentUser: currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: App,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/profile/:id\",\n      component: Profile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }))));\n  });\n};\n\nexport var ME_QUERY = gql(_templateObject()); // const GET_TRACKS_QUERY = gql`\n//     {\n//         tracks {\n//             id\n//             title\n//             description\n//             hashtag\n//             url\n//         }\n//     }\n// `\n\nexport default withRoot(Root);","map":{"version":3,"sources":["/Users/tatsuya-tsuri/Desktop/Code/graph-react-tracks/graph-react-tracks-client/src/Root.js"],"names":["React","Query","gql","BrowserRouter","Router","Switch","Route","withRoot","App","Profile","Header","Loading","Error","UserContext","createContext","Root","ME_QUERY","data","loading","error","currentUser","me"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AAEA,OAAO,IAAMC,WAAW,GAAGb,KAAK,CAACc,aAAN,EAApB;;AAEP,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,SACT,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEC,QAAd;AAAwB,IAAA,WAAW,EAAC,mBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,gBAA8B;AAAA,QAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,QAArBC,OAAqB,QAArBA,OAAqB;AAAA,QAAZC,KAAY,QAAZA,KAAY;AAC3B,QAAID,OAAJ,EAAa,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACb,QAAIC,KAAJ,EAAW,OAAO,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACX,QAAMC,WAAW,GAAGH,IAAI,CAACI,EAAzB;AAEA,WACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAED,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAEA,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEZ,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,cAAZ;AAA2B,MAAA,SAAS,EAAEC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,CADJ,CADJ;AAWH,GAjBL,CADS;AAAA,CAAb;;AAsBA,OAAO,IAAMO,QAAQ,GAAGd,GAAH,mBAAd,C,CAeP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeK,QAAQ,CAACQ,IAAD,CAAvB","sourcesContent":["import React from \"react\";\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport withRoot from \"./withRoot\";\nimport App from './pages/App';\nimport Profile from './pages/Profile';\nimport Header from './components/Shared/Header';\nimport Loading from './components/Shared/Loading';\nimport Error from './components/Shared/Error';\n\nexport const UserContext = React.createContext()\n\nconst Root = () => (\n    <Query query={ME_QUERY} fetchPolicy=\"cache-and-network\">\n        {({ data, loading, error }) => {\n            if (loading) return <Loading />;\n            if (error) return <Error error={error} />;\n            const currentUser = data.me;\n\n            return (\n                <Router>\n                    <UserContext.Provider value={currentUser}>\n                        <Header currentUser={currentUser} />\n                        <Switch>\n                            <Route exact path=\"/\" component={App} />\n                            <Route path=\"/profile/:id\" component={Profile} />\n                        </Switch>\n                    </UserContext.Provider>\n                </Router>\n            );\n        }}\n    </Query>\n);\n\nexport const ME_QUERY = gql`\n  {\n    me {\n      id\n      username\n      email\n      likeSet {\n        track {\n          id\n        }\n      }\n    }\n  }\n`;\n\n// const GET_TRACKS_QUERY = gql`\n//     {\n//         tracks {\n//             id\n//             title\n//             description\n//             hashtag\n//             url\n//         }\n//     }\n// `\n\nexport default withRoot(Root);\n"]},"metadata":{},"sourceType":"module"}