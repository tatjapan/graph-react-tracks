{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/tatsuya-tsuri/Desktop/Code/graph-react-tracks/graph-react-tracks-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/tatsuya-tsuri/Desktop/Code/graph-react-tracks/graph-react-tracks-client/src/Root.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        {\\n            me {\\n                id\\n                username\\n                email\\n            }\\n        }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport withRoot from \"./withRoot\";\nimport App from './pages/App';\n\nvar Root = function Root() {\n  return React.createElement(Query, {\n    query: ME_QUERY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, function (_ref) {\n    var data = _ref.data,\n        loading = _ref.loading,\n        error = _ref.error;\n    if (loading) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Loading\");\n    if (error) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"Error\");\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      component: App,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }));\n  });\n};\n\nvar ME_QUERY = gql(_templateObject()); // const GET_TRACKS_QUERY = gql`\n//     {\n//         tracks {\n//             id\n//             title\n//             description\n//             hashtag\n//             url\n//         }\n//     }\n// `\n\nexport default withRoot(Root);","map":{"version":3,"sources":["/Users/tatsuya-tsuri/Desktop/Code/graph-react-tracks/graph-react-tracks-client/src/Root.js"],"names":["React","Query","gql","BrowserRouter","Router","Switch","Route","withRoot","App","Root","ME_QUERY","data","loading","error"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,SACT,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,gBAA8B;AAAA,QAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,QAArBC,OAAqB,QAArBA,OAAqB;AAAA,QAAZC,KAAY,QAAZA,KAAY;AAC3B,QAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACb,QAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AAEX,WACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAEL,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH,GAVL,CADS;AAAA,CAAb;;AAeA,IAAME,QAAQ,GAAGR,GAAH,mBAAd,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeK,QAAQ,CAACE,IAAD,CAAvB","sourcesContent":["import React from \"react\";\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport withRoot from \"./withRoot\";\nimport App from './pages/App';\n\nconst Root = () => (\n    <Query query={ME_QUERY}>\n        {({ data, loading, error }) => {\n            if (loading) return <div>Loading</div>\n            if (error) return <div>Error</div>\n\n            return (\n                <Router>\n                    <Route path=\"/\" component={App} />\n                </Router>\n            )\n        }}\n    </Query>\n);\n\nconst ME_QUERY = gql`\n        {\n            me {\n                id\n                username\n                email\n            }\n        }\n`;\n\n\n// const GET_TRACKS_QUERY = gql`\n//     {\n//         tracks {\n//             id\n//             title\n//             description\n//             hashtag\n//             url\n//         }\n//     }\n// `\n\nexport default withRoot(Root);\n"]},"metadata":{},"sourceType":"module"}